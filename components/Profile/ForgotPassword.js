/*********************************************************************
  ForgotPassword.js
  Sends the user a password reset email.  Email is generated by
  Firebase.  We just need to supply the email address.
*********************************************************************/
import React, { Component } from 'react';
import firebase from 'firebase';
import { connect } from 'react-redux';
import { Actions } from 'react-native-router-flux';
import { ScrollView, Text, TouchableOpacity, View } from 'react-native';
import { styles } from '../../assets/Styles';
import { Button, Card, CardSection, Input, Spinner } from '../common';
import {
  emailPasswordReset,
  resetAuthErrorState,
} from '../../actions';

class ForgotPassword extends Component {
  state = {
    resetEmail: ''
  }

  componentWillMount() {
    this.props.resetAuthErrorState();
  }

  onEmailChange(text) {
    this.props.emailChanged(text);
  }

  onResetEmailChange(text) {
    this.setState({ resetEmail: text });
  }

  onResetPasswordButtonPress() {
    const { loading } = this.props;
    const resetEmail = this.state.resetEmail;
    console.log('ForgotPassword.js ', resetEmail);
    if (!resetEmail) return;
    this.props.emailPasswordReset(resetEmail);
  }

  render() {
    console.log('ForgotPassword error', this.props.authError);
    return (
      <Card>
        <CardSection>
          <Text style={styles.noticeTextStyle}>If the email address you enter is registered, a link will be sent to that email address to to reset your password.</Text>
        </CardSection>
        <CardSection>
          <Input
            label="Email"
            placeholder="youremail@domain.com"
            onChangeText={this.onResetEmailChange.bind(this)}
            value={this.state.resetEmail}
          />
        </CardSection>
        <CardSection>
          <Button onPress={this.onResetPasswordButtonPress.bind(this)}>
            Send Password Reset
          </Button>
        </CardSection>
        <Text style={styles.errorTextStyle}>{this.props.authError}</Text>
      </Card>
    );
  }
}

const mapStateToProps = ({ auth, user }) => {
  const { email, loading, authError } = auth;
  return { authError, email, loading };
};

export default connect(mapStateToProps, {
  emailPasswordReset,
  resetAuthErrorState,
})(ForgotPassword);
